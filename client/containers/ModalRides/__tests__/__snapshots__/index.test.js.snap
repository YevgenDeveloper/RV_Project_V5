// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModalRides
    close={[MockFunction]}
    currentRide="Test"
    onChangeRide={[MockFunction]}
    rides={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div
          className="header"
        >
          <h1>
            Rides
          </h1>
          <div
            className="buttonAdd"
          >
            <Button
              blue={true}
              className="button"
              dark={false}
              disabled={false}
              label="Add ride"
              onClick={[Function]}
            />
            <input
              type="file"
            />
          </div>
        </div>,
        <div
          className="rides"
        />,
      ],
      "className": undefined,
      "close": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              Rides
            </h1>,
            <div
              className="buttonAdd"
            >
              <Button
                blue={true}
                className="button"
                dark={false}
                disabled={false}
                label="Add ride"
                onClick={[Function]}
              />
              <input
                type="file"
              />
            </div>,
          ],
          "className": "header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Rides",
            },
            "ref": null,
            "rendered": "Rides",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Button
                  blue={true}
                  className="button"
                  dark={false}
                  disabled={false}
                  label="Add ride"
                  onClick={[Function]}
                />,
                <input
                  type="file"
                />,
              ],
              "className": "buttonAdd",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "blue": true,
                  "className": "button",
                  "dark": false,
                  "disabled": false,
                  "label": "Add ride",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "type": "file",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "rides",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className="header"
          >
            <h1>
              Rides
            </h1>
            <div
              className="buttonAdd"
            >
              <Button
                blue={true}
                className="button"
                dark={false}
                disabled={false}
                label="Add ride"
                onClick={[Function]}
              />
              <input
                type="file"
              />
            </div>
          </div>,
          <div
            className="rides"
          />,
        ],
        "className": undefined,
        "close": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                Rides
              </h1>,
              <div
                className="buttonAdd"
              >
                <Button
                  blue={true}
                  className="button"
                  dark={false}
                  disabled={false}
                  label="Add ride"
                  onClick={[Function]}
                />
                <input
                  type="file"
                />
              </div>,
            ],
            "className": "header",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Rides",
              },
              "ref": null,
              "rendered": "Rides",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Button
                    blue={true}
                    className="button"
                    dark={false}
                    disabled={false}
                    label="Add ride"
                    onClick={[Function]}
                  />,
                  <input
                    type="file"
                  />,
                ],
                "className": "buttonAdd",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "blue": true,
                    "className": "button",
                    "dark": false,
                    "disabled": false,
                    "label": "Add ride",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "type": "file",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "rides",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
