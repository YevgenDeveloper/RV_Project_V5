// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Toolbar
    calibrated={false}
    distance={0}
    onClickClose={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="distance"
        >
          Draw the line between two rails
        </div>,
        <Button
          blue={false}
          className="button"
          dark={true}
          disabled={false}
          label="Close"
          onClick={[Function]}
        />,
      ],
      "className": "toolbar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Draw the line between two rails",
          "className": "distance",
        },
        "ref": null,
        "rendered": "Draw the line between two rails",
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "blue": false,
          "className": "button",
          "dark": true,
          "disabled": false,
          "label": "Close",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="distance"
          >
            Draw the line between two rails
          </div>,
          <Button
            blue={false}
            className="button"
            dark={true}
            disabled={false}
            label="Close"
            onClick={[Function]}
          />,
        ],
        "className": "toolbar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Draw the line between two rails",
            "className": "distance",
          },
          "ref": null,
          "rendered": "Draw the line between two rails",
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "blue": false,
            "className": "button",
            "dark": true,
            "disabled": false,
            "label": "Close",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
