// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          aria-label="Close modal"
          className="fade"
          onClick={[Function]}
          title="Close modal"
          type="button"
        />,
        <div
          className="body"
        >
          <button
            aria-label="Close modal"
            className="close"
            onClick={[Function]}
            title="Close modal"
            type="button"
          />
          <Scrollbars
            autoHeight={true}
            autoHeightMax="calc(100vh - 120px)"
            autoHeightMin={80}
            autoHide={false}
            autoHideDuration={200}
            autoHideTimeout={1000}
            hideTracksWhenNotNeeded={false}
            renderThumbHorizontal={[Function]}
            renderThumbVertical={[Function]}
            renderTrackHorizontal={[Function]}
            renderTrackVertical={[Function]}
            renderView={[Function]}
            tagName="div"
            thumbMinSize={30}
            universal={false}
          >
            <div
              className="content"
            />
          </Scrollbars>
        </div>,
      ],
      "className": "modal",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "aria-label": "Close modal",
          "className": "fade",
          "onClick": [Function],
          "title": "Close modal",
          "type": "button",
        },
        "ref": null,
        "rendered": null,
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <button
              aria-label="Close modal"
              className="close"
              onClick={[Function]}
              title="Close modal"
              type="button"
            />,
            <Scrollbars
              autoHeight={true}
              autoHeightMax="calc(100vh - 120px)"
              autoHeightMin={80}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div
                className="content"
              />
            </Scrollbars>,
          ],
          "className": "body",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "Close modal",
              "className": "close",
              "onClick": [Function],
              "title": "Close modal",
              "type": "button",
            },
            "ref": null,
            "rendered": null,
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autoHeight": true,
              "autoHeightMax": "calc(100vh - 120px)",
              "autoHeightMin": 80,
              "autoHide": false,
              "autoHideDuration": 200,
              "autoHideTimeout": 1000,
              "children": <div
                className="content"
              />,
              "hideTracksWhenNotNeeded": false,
              "renderThumbHorizontal": [Function],
              "renderThumbVertical": [Function],
              "renderTrackHorizontal": [Function],
              "renderTrackVertical": [Function],
              "renderView": [Function],
              "tagName": "div",
              "thumbMinSize": 30,
              "universal": false,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": null,
                "className": "content",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            aria-label="Close modal"
            className="fade"
            onClick={[Function]}
            title="Close modal"
            type="button"
          />,
          <div
            className="body"
          >
            <button
              aria-label="Close modal"
              className="close"
              onClick={[Function]}
              title="Close modal"
              type="button"
            />
            <Scrollbars
              autoHeight={true}
              autoHeightMax="calc(100vh - 120px)"
              autoHeightMin={80}
              autoHide={false}
              autoHideDuration={200}
              autoHideTimeout={1000}
              hideTracksWhenNotNeeded={false}
              renderThumbHorizontal={[Function]}
              renderThumbVertical={[Function]}
              renderTrackHorizontal={[Function]}
              renderTrackVertical={[Function]}
              renderView={[Function]}
              tagName="div"
              thumbMinSize={30}
              universal={false}
            >
              <div
                className="content"
              />
            </Scrollbars>
          </div>,
        ],
        "className": "modal",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "aria-label": "Close modal",
            "className": "fade",
            "onClick": [Function],
            "title": "Close modal",
            "type": "button",
          },
          "ref": null,
          "rendered": null,
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <button
                aria-label="Close modal"
                className="close"
                onClick={[Function]}
                title="Close modal"
                type="button"
              />,
              <Scrollbars
                autoHeight={true}
                autoHeightMax="calc(100vh - 120px)"
                autoHeightMin={80}
                autoHide={false}
                autoHideDuration={200}
                autoHideTimeout={1000}
                hideTracksWhenNotNeeded={false}
                renderThumbHorizontal={[Function]}
                renderThumbVertical={[Function]}
                renderTrackHorizontal={[Function]}
                renderTrackVertical={[Function]}
                renderView={[Function]}
                tagName="div"
                thumbMinSize={30}
                universal={false}
              >
                <div
                  className="content"
                />
              </Scrollbars>,
            ],
            "className": "body",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Close modal",
                "className": "close",
                "onClick": [Function],
                "title": "Close modal",
                "type": "button",
              },
              "ref": null,
              "rendered": null,
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autoHeight": true,
                "autoHeightMax": "calc(100vh - 120px)",
                "autoHeightMin": 80,
                "autoHide": false,
                "autoHideDuration": 200,
                "autoHideTimeout": 1000,
                "children": <div
                  className="content"
                />,
                "hideTracksWhenNotNeeded": false,
                "renderThumbHorizontal": [Function],
                "renderThumbVertical": [Function],
                "renderTrackHorizontal": [Function],
                "renderTrackVertical": [Function],
                "renderView": [Function],
                "tagName": "div",
                "thumbMinSize": 30,
                "universal": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": null,
                  "className": "content",
                },
                "ref": null,
                "rendered": null,
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
